<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<solver xmlns="https://www.optaplanner.org/xsd/solver" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://www.optaplanner.org/xsd/solver https://www.optaplanner.org/xsd/solver/solver.xsd">
  <!-- To slowly prove there are no bugs in this code -->
  <!--<environmentMode>FULL_ASSERT</environmentMode>-->
  <!-- To solve faster by saturating multiple CPU cores -->
  <!--<moveThreadCount>AUTO</moveThreadCount>--> <!--Multithread-->
  <moveThreadCount>NONE</moveThreadCount><!-- not multi thread-->

  <!-- Domain model configuration -->
  <solutionClass>org.optaplanner.examples.transactionbalancing.domain.EmvBalance</solutionClass>
  <entityClass>org.optaplanner.examples.transactionbalancing.domain.EmvProcess</entityClass>

  <!-- Score configuration -->
  <scoreDirectorFactory>
    <incrementalScoreCalculatorClass>org.optaplanner.examples.transactionbalancing.optional.score.EmvTransactionBalancingIncrementalScoreCalculator</incrementalScoreCalculatorClass>

    <!--<constraintProviderClass>org.optaplanner.examples.transactionbalancing.score.TransactionBalancingConstraintProvider</constraintProviderClass>-->
    <!--<easyScoreCalculatorClass>org.optaplanner.examples.transactionbalancing.optional.score.TransactionBalancingEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--<easyScoreCalculatorClass>org.optaplanner.examples.transactionbalancing.optional.score.TransactionBalancingMapBasedEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--<incrementalScoreCalculatorClass>org.optaplanner.examples.transactionbalancing.optional.score.TransactionBalancingIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
    <initializingScoreTrend>ONLY_DOWN</initializingScoreTrend>
    <!--<assertionScoreDirectorFactory>-->
      <!--<easyScoreCalculatorClass>org.optaplanner.examples.transactionbalancing.optional.score.TransactionBalancingMapBasedEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--</assertionScoreDirectorFactory>-->
  </scoreDirectorFactory>

  <!-- Optimization algorithms configuration -->
  <termination>
    <!--<minutesSpentLimit>3</minutesSpentLimit>-->
    <!--<minutesSpentLimit>20</minutesSpentLimit>--> <!--for debug-->
    <secondsSpentLimit>30</secondsSpentLimit>
  </termination>

  <!-- Power tweaked optimization algorithms configuration -->
  <!--<constructionHeuristic>
    <constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>
  </constructionHeuristic>
  <localSearch>
    <unionMoveSelector> &lt;!&ndash;selects the possible moves of the current solution.&ndash;&gt;
      <changeMoveSelector/>
      <swapMoveSelector/>
      &lt;!&ndash;<pillarChangeMoveSelector/>
      <pillarSwapMoveSelector/>&ndash;&gt;
    </unionMoveSelector>
    <acceptor> &lt;!&ndash;  filters out unacceptable moves.&ndash;&gt;
      <entityTabuSize>7</entityTabuSize>
    </acceptor>
    <forager> &lt;!&ndash; gathers accepted moves and picks the next step from them.&ndash;&gt;
      <acceptedCountLimit>1000</acceptedCountLimit> &lt;!&ndash; By default, all accepted moves are evaluated at every step.&ndash;&gt;
    </forager>
  </localSearch>-->

  <!-- Alternative power tweaked optimization algorithms configuration -->
  <!--<partitionedSearch>-->
    <!--<solutionPartitionerClass>org.optaplanner.examples.transactionbalancing.optional.partitioner.TransactionBalancePartitioner</solutionPartitionerClass>-->
    <!--<solutionPartitionerCustomProperties>-->
      <!--<partCount>4</partCount>-->
      <!--<minimumProcessListSize>300</minimumProcessListSize>-->
    <!--</solutionPartitionerCustomProperties>-->
  <!--</partitionedSearch>-->
</solver>
